<?php
    // 自分の得意な言語で
    // Let's チャレンジ！！
    $input_lines = trim(fgets(STDIN) );
    $tag = explode(" ", $input_lines);
    $length = trim(fgets(STDIN) );

// 1 -------------------------------------------------
//   文字列SからタグAを（左から）右に向かって検索する
//----------------------------------------------------
    // タグAの開始位置を検索
    $tag1_pos = strpos($length, $tag[0]);

    // タグAの長さを取得
    $tag1_len = strlen($tag[0]);

// 2--------------------------------------------------------------------
//   1で検索したタグA出現位置からタグBを（左から）右に向かって検索する
//----------------------------------------------------------------------
    // タグAが存在しなければ処理を終了する
    while($tag1_pos !== FALSE){

        // タグAの終端位置
        $tag1_end = $tag1_pos + $tag1_len;

        // タグBの開始位置を検索
        $tag2_pos = strpos($length, $tag[1], $tag1_end);

// 3-------------------------------------------------------
//   検索したタグA,Bに囲まれている文字列を抽出し出力する
//   また、抽出文字の長さが、0の場合、<blank>と出力する
//---------------------------------------------------------
        //タグA,Bに囲まれている文字列を抽出(B - A)
        $result = substr($length, $tag1_end, $tag2_pos - $tag1_end);

        //抽出文字の長さが、0の場合、<blank>と出力
        if( empty($result) ){
            echo '<blank>' . "\n";
        }else{
            echo "$result" . "\n";
        }

// 4-------------------------------------------------------------
//   タグBの出現位置から再度タグAを検索し、
//   存在すればタグA出現位置からタグBを検索し2の処理を行い、
//   存在しなければ処理を終了する
//---------------------------------------------------------------
        // タグBの長さを取得
        $tag2_len = strlen($tag[1]);

        // タグBの終端位置
        $tag2_end = $tag2_pos + $tag2_len;

        // タグBの出現位置から再度タグAを検索
        $tag1_pos = strpos($length, $tag[0], $tag2_end);

    }
?>
